plot(hcdc_slice_r.crop)
ROI <- extent(-180, -152, 50, 75) #xmin, xmax (180+80), ymin, ymax
ROI
hcdc_slice_r.crop <- crop(hcdc_slice_r,ROI)
plot(hcdc_slice_r.crop)
ROI <- extent(-180, -152, 50, 75) #xmin, xmax (180+80), ymin, ymax
ROI
hcdc_slice_r.crop <- crop(hcdc_slice_r,ROI)
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
library(ggplot2)
library(maptools)
library(maps)
library("latticeExtra")
library(here)
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname1 <- "hcdc.mon.mean"
ncfname1 <- paste(ncpath, ncname1, ".nc", sep="")
dname1 <- "hcdc"
# open a netCDF file
ncin1 <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
plot(var.nc1[[1:12]], main = "Monthly High Cloud Area Fraction in 1979")
m <- 1 #1 Outputs first month of time series, 513 outputs last month
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
dim(hcdc_slice_r)
plot(hcdc_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc1@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname1, " ", substr(TIME[m], 1, 7), sep="")
#Pot the Map
spplot(hcdc_slice_r,  main = ttl, col.regions=temp.palette)
#Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
#writeRaster(tmp_slice_r, ttl, "IDRISI", overwrite=TRUE)
#Region of Interest
ROI <- extent(-180, -152, 50, 75) #xmin, xmax (180+80), ymin, ymax
ROI
hcdc_slice_r.crop <- crop(hcdc_slice_r,ROI)
plot(hcdc_slice_r.crop)
map("world",fill=FALSE,plot=TRUE)
World <- map("world",fill=TRUE,plot=FALSE)
Worldsp <- map2SpatialPolygons(World, IDs = sub(":.*", "", World$names),
proj4string=CRS("+proj=longlat +datum=WGS84"))
library(maptools) #for map2SpatialPolygons
library(maps) #for world maps
map("world",fill=FALSE,plot=TRUE)
World <- map("world",fill=TRUE,plot=FALSE)
Worldsp <- map2SpatialPolygons(World, IDs = sub(":.*", "", World$names),
proj4string=CRS("+proj=longlat +datum=WGS84"))
library(maptools) #for map2SpatialPolygons
library(maps) #for world maps
map("world",fill=FALSE,plot=TRUE)
map("world1",fill=FALSE,plot=TRUE)
library("latticeExtra") #for spplot
map("world",fill=FALSE,plot=TRUE)
World <- map("world",fill=TRUE,plot=FALSE)
map("world2",fill=FALSE,plot=TRUE)
map("world2",fill=FALSE,plot=TRUE)
World2 <- map("world2",fill=TRUE,plot=FALSE)
World2sp <- map2SpatialPolygons(World2, IDs = sub(":.*", "", World2$names),
proj4string=CRS("+proj=longlat +datum=WGS84"))
library(maptools) #for map2SpatialPolygons
library(maps) #for world maps
library("latticeExtra") #for spplot
map("world2",fill=FALSE,plot=TRUE)
World <- map("world",fill=TRUE,plot=FALSE)
Worldsp <- map2SpatialPolygons(World, IDs = sub(":.*", "", World$names),
proj4string=CRS("+proj=longlat +datum=WGS84"))
ROI <- extent(-180, -152, 50, 75) #xmin, xmax (180+80), ymin, ymax
ROI
plot(st_geometry(ROI))
plot(var.nc1)
plot(var.nc1[[1]])
coords <- cbind("x" = c(-180, -152, -152, -180, -180),
"y" = c(75, 75, 50, 50, 75))
pol <- st_polygon(x = list(coords)) %>% st_sfc %>% st_sf(ID = 1, crs = 4326)
plot(pol)
hcdc_slice_r.crop <- crop(hcdc_slice_r, pol)
plot(hcdc_slice_r.crop)
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
library(ggplot2)
library(maptools)
library(maps)
library("latticeExtra")
library(here)
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname1 <- "hcdc.mon.mean"
ncfname1 <- paste(ncpath, ncname1, ".nc", sep="")
dname1 <- "hcdc"
# open a netCDF file
ncin1 <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
plot(var.nc1[[1:12]], main = "Monthly High Cloud Area Fraction in 1979")
#plot(var.nc1[[1]]) #Alternative Method of Mpping First Month
m <- 1 #1 Outputs first month of time series, 513 outputs last month, is going to used for loop
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
dim(hcdc_slice_r)
plot(hcdc_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc1@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname1, " ", substr(TIME[m], 1, 7), sep="")
#Pot the Map
spplot(hcdc_slice_r,  main = ttl, col.regions=temp.palette)
#Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
#writeRaster(tmp_slice_r, ttl, "IDRISI", overwrite=TRUE)
#Region of Interest
ROI <- extent(-180, -152, 50, 75) #xmin, xmax (180+80), ymin, ymax
ROI
coords <- cbind("x" = c(-180, -152, -152, -180, -180),
"y" = c(75, 75, 50, 50, 75))
pol <- st_polygon(x = list(coords)) %>% st_sfc %>% st_sf(ID = 1, crs = 4326)
plot(pol)
hcdc_slice_r.crop <- crop(hcdc_slice_r, pol)
plot(hcdc_slice_r.crop)
coords <- cbind("x" = c(-180, -152, -152, -180, -180),
"y" = c(75, 75, 50, 50, 75))
pol <- st_polygon(x = list(coords)) %>% st_sfc %>% st_sf(ID = 1, crs = 4326)
plot(pol)
hcdc_slice_r.crop <- crop(hcdc_slice_r, pol)
plot(hcdc_slice_r.crop)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
hcdc_slice_r
pol
plot(pol)
pol
pol <- st_polygon(x = list(coords)) %>% st_sfc %>% st_sf(ID = 1, crs = hcdc_slice_r)
st_crs(pol) <- st_crs(hcdc_slice_r)
st_transform(pol, crs = hcdc_slice_r)
hcdc_slice_r.crop <- crop(hcdc_slice_r, pol)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
map("world2",fill=FALSE,plot=TRUE)
World2 <- map("world2",fill=TRUE,plot=FALSE)
World2sp <- map2SpatialPolygons(World2, IDs = sub(":.*", "", World2$names),
proj4string=CRS("+proj=longlat +datum=WGS84"))
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
#load some more packages:
library(maptools) #for map2SpatialPolygons
library(maps) #for world maps
library("latticeExtra") #for spplot
map("world2",fill=FALSE,plot=TRUE)
World2 <- map("world2",fill=TRUE,plot=FALSE)
World2sp <- map2SpatialPolygons(World2, IDs = sub(":.*", "", World2$names),
proj4string=CRS("+proj=longlat +datum=WGS84"))
hcdc_slice_r
plot(hcdc_slice_r)
# Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
writeRaster(hcdc_slice_r, ttl, "IDRISI", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GeoTiff", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GeTiff", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GTiff", overwrite=TRUE)
library(ncdf4)
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname30 <- "gh"
ncfname30 <- paste(ncpath, ncname1, ".nc", sep="")
dname30 <- "gh"
# open a netCDF file
ncin1 <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
ncin1
ncname30 <- "hcdc_test"
ncfname30 <- paste(ncpath, ncname1, ".nc", sep="")
dname30 <- "gh"
dname30 <- "hcdc"
# open a netCDF file
ncin30 <- nc_open(ncfname30)
ncin30
library(ncdf4)
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname30 <- "hcdc_test"
ncfname30 <- paste(ncpath, ncname1, ".nc", sep="")
dname30 <- "hcdc"
# open a netCDF file
ncin30 <- nc_open(ncfname30)
ncin30
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname30 <- "hcdc_test"
ncfname30 <- paste(ncpath, ncname1, ".nc", sep="")
dname30 <- "hcdc"
ncfname30 <- paste(ncpath, ncname30, ".nc", sep="")
dname30 <- "hcdc"
# open a netCDF file
ncin30 <- nc_open(ncfname30)
ncin30
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname30,varname=dname30)
m <- 1 #1 Outputs first month of time series, 513 outputs last month, is going to used for loop
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
hcdc_slice_r
# Chunk 1
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
# Chunk 2: setup
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
library(ggplot2)
library(maptools)
library(maps)
library("latticeExtra")
library(here)
# Chunk 3: Setting up
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname1 <- "hcdc.mon.mean"
ncfname1 <- paste(ncpath, ncname1, ".nc", sep="")
dname1 <- "hcdc"
# open a netCDF file
ncin1 <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
# Chunk 4: Mapping Annual Breakdown of North American Region for HCDC in 1979
#plot(var.nc1[[1:12]], main = "Monthly High Cloud Area Fraction in 1979")
#plot(var.nc1[[1]]) #Alternative Method of Mpping First Month
# Chunk 5: Mapping Singular Monthly Output of HDCD
m <- 1 #1 Outputs first month of time series, 513 outputs last month, is going to used for loop
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
dim(hcdc_slice_r)
plot(hcdc_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc1@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname1, " ", substr(TIME[m], 1, 7), sep="")
#Pot the Map
spplot(hcdc_slice_r,  main = ttl, col.regions=temp.palette)
# Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
writeRaster(hcdc_slice_r, ttl, "IDRISI", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GTiff", overwrite=TRUE)
writeFormats()
# Chunk 6: Cropping to new extent
#Region of Interest
ROI <- extent(-16231.49, 11313351, -16231.5, 8976020) #xmin, xmax (180+80), ymin, ymax
ROI
hcdc_slice_r.crop <- crop(hcdc_slice_r, pol)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
ROI
plot(ROI)
hcdc_slice_r.crop <- crop(hcdc_slice_r, ROI)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
hcdc_slice_r.crop <- crop(hcdc_slice_r, ROI)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
ROI <- extent(-16231.49, 11313351, -16231.5, 8976020) #xmin, xmax (180+80), ymin, ymax
ROI
plot(ROI)
hcdc_slice_r.crop <- crop(hcdc_slice_r, ROI)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
#Region of Interest
ROI <- extent(-16231.49, 11313351, -16231.5, 8976020) #xmin, xmax (180+80), ymin, ymax
plot(ROI)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
library(ggplot2)
library(maptools)
library(maps)
library("latticeExtra")
library(here)
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname1 <- "hcdc.mon.mean"
ncfname1 <- paste(ncpath, ncname1, ".nc", sep="")
dname1 <- "hcdc"
# open a netCDF file
ncin1 <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
#plot(var.nc1[[1:12]], main = "Monthly High Cloud Area Fraction in 1979")
#plot(var.nc1[[1]]) #Alternative Method of Mpping First Month
m <- 1 #1 Outputs first month of time series, 513 outputs last month, is going to used for loop
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
dim(hcdc_slice_r)
plot(hcdc_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc1@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname1, " ", substr(TIME[m], 1, 7), sep="")
#Pot the Map
spplot(hcdc_slice_r,  main = ttl, col.regions=temp.palette)
# Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
writeRaster(hcdc_slice_r, ttl, "IDRISI", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GTiff", overwrite=TRUE)
writeFormats()
seq(as.Date("2000/1/1"), by = "month", length.out = 12)
seq(as.Date("2000/1/1"), by = "month", length.out = 513)
seq(as.Date("1979/1/1"), by = "month", length.out = 513)
ncin1
writeRaster(tmp_slice_r, ttl, "IDRISI", overwrite=TRUE)
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
library(ggplot2)
library(maptools)
library(maps)
library("latticeExtra")
#Enter Path to data below
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_399/Datasets/"
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_399/Datasets/hcdc_reanalysis_"
d#ir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname1 <- "hcdc.mon.mean"
ncfname1 <- paste(ncpath, ncname1, ".nc", sep="")
dname1 <- "hcdc"
# open a netCDF file
ncin <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
var.nc1
plot(var.nc[[1:12]], main = "Monthly High Cloud Area Fraction in 1979") #plot first 12 maps
m <- 513 #which time slice do we want to view (can use this to create a LOOP later)
#subset extracts a single layer from the raster brick
tmp_slice_r<-subset(var.nc1,m)
dim(tmp_slice_r)
plot(tmp_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc2@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname, " ", substr(TIME[m], 1, 7),sep="")
#test it
spplot(tmp_slice_r,  main = ttl, col.regions=temp.palette)
writeRaster(tmp_slice_r, ttl, "IDRISI", overwrite=TRUE)
# func=mean
# df <- data.frame(INDEX = 1:length(TIME), TIME=TIME)
# head(df)
# years <- unique(format(TIME, "%Y"))
# head(years)
# YEAR = years[1]
# var.nc <- brick(ncfname1, varname=dname1, layer="time")
#
# for(YEAR in years){
#   subset <- df[format(df$TIME, "%Y") == YEAR,] #grab all the files in that year
#   sub.var <- var.nc[[subset$INDEX]] #create a raster stack subset for the files in that year
#
#   print(paste("Executing Average for Year: ",YEAR))
#   av.var <- calc(sub.var, fun=func, filename=paste0(out_folder,"/",dname,"_Year",YEAR,"Avg.tif"),overwrite=TRUE)
#   print(paste("Raster for Year ",YEAR," Ready in the Output Folder"))
# }
#
# #open one to see what it looks like:
# setwd(out_folder)
# YEAR=2020
# outname=paste0(dname,"_Year",YEAR,"Avg.tif")
# r<-raster(outname)
# plot(r,main=outname)
#
#
#
# seq(as.Date("2000/1/1"), by = "month", length.out = 12)
#
# library(sp)
# library(tidyverse)
# library(sf)
#
# coords <- cbind("x" = c(-180, -152, -152, -180, -180),
#                 "y" = c(75, 75, 50, 50, 75))
# pol <- st_polygon(x = list(coords)) %>% st_sfc %>% st_sf(ID = 1, crs = 4326)
# plot(pol)
m <- 1
#subset extracts a single layer from the raster brick
tmp_slice_r<-subset(var.nc1,m)
TIME <- as.POSIXct(substr(var.nc2@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname, " ", substr(TIME[m], 1, 7),sep="")
#test it
spplot(tmp_slice_r,  main = ttl, col.regions=temp.palette)
writeRaster(tmp_slice_r, ttl, "IDRISI", overwrite=TRUE)
writeRaster(tmp_slice_r, ttl, "GTiff", overwrite=TRUE)
ncin
hcdc_slice_r
plot(hcdc_slice_r.crop, main = 'Cropped Data')
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(ncdf4)
library(chron)
library(raster)
library(lattice)
library(RColorBrewer)
library(ggplot2)
library(maptools)
library(maps)
library("latticeExtra")
library(here)
ppath <- "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/" #Change to local Directory
#out_folder = "C:/Users/aandi/Desktop/Fall_2021/GEOG_346/Final_Project/Datasets/hcdc_reanalysis_"
#dir.create(out_folder)
ncpath <- ppath
#High Cloud Area Fraction
ncname1 <- "hcdc.mon.mean"
ncfname1 <- paste(ncpath, ncname1, ".nc", sep="")
dname1 <- "hcdc"
# open a netCDF file
ncin1 <- nc_open(ncfname1)
#grab time slice from raster brick instead of array:
var.nc1<-brick(ncfname1,varname=dname1)
#plot(var.nc1[[1:12]], main = "Monthly High Cloud Area Fraction in 1979")
#plot(var.nc1[[1]]) #Alternative Method of Mpping First Month
m <- 1 #1 Outputs first month of time series, 513 outputs last month, is going to used for loop
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
dim(hcdc_slice_r)
plot(hcdc_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc1@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname1, " ", substr(TIME[m], 1, 7), sep="")
#Pot the Map
spplot(hcdc_slice_r,  main = ttl, col.regions=temp.palette)
# Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
writeRaster(hcdc_slice_r, ttl, "IDRISI", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GTiff", overwrite=TRUE)
m <- 1 #1 Outputs first month of time series, 513 outputs last month, is going to used for loop
#subset extracts a single layer from the raster brick
hcdc_slice_r<-subset(var.nc1,m)
dim(hcdc_slice_r)
plot(hcdc_slice_r)
#create color palettes:
temp.palette <- rev(colorRampPalette(c("darkred","red","orange",
"lightyellow","white","azure",
"cyan","blue","darkblue"))(100))
TIME <- as.POSIXct(substr(var.nc1@data@names, start=2, stop=20), format="%Y.%m.%d")
#Create a title for plot: take TIME[m] string and how many characters from the left to keep in title? 7 or 10
ttl <- paste(dname1, " ", substr(TIME[m], 1, 7), sep="")
#Pot the Map
spplot(hcdc_slice_r,  main = ttl, col.regions=temp.palette)
# Output the data as a GeoTiff/ Raster (Compatible with TerrSet)
writeRaster(hcdc_slice_r, ttl, "IDRISI", overwrite=TRUE)
writeRaster(hcdc_slice_r, ttl, "GTiff", overwrite=TRUE)
#Region of Interest
ROI <- extent(-16231.49, 11313351, -16231.5, 8976020) #xmin, xmax (180+80), ymin, ymax
ROI
plot(ROI)
hcdc_slice_r.crop <- crop(hcdc_slice_r, ROI)
plot(hcdc_slice_r.crop, main = 'Cropped Data')
coords <- cbind("x" = c(-180, -152, -152, -180, -180),
"y" = c(75, 75, 50, 50, 75))
pol <- st_polygon(x = list(coords)) %>% st_sfc %>% st_sf(ID = 1, crs = 4326)
plot(pol)
